.. _panos_config_element_module:


panos_config_element -- Modifies an element in the PAN-OS configuration.
========================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

This module allows the user to modify an element in the PAN-OS configuration by specifying an element and its location in the configuration (xpath).




Requirements
------------
The below requirements are needed on the host that executes this module.

- pan-os-python



Parameters
----------

  xpath (required, type: str)
    Location of the specified element in the XML configuration.


  element (type: str)
    The element, in XML format.


  edit (type: bool)
    If **true**, replace any existing configuration at the specified location with the contents of *element*.

    If **false**, merge the contents of *element* with any existing configuration at the specified location.


  provider (required, type: dict)
    A dict object containing connection details.


    ip_address (required, type: str)
      The IP address or hostname of the PAN-OS device being configured.


    username (type: str, default: admin)
      The username to use for authentication.  This is ignored if *api_key* is specified.


    password (type: str)
      The password to use for authentication.  This is ignored if *api_key* is specified.


    api_key (type: str)
      The API key to use instead of generating it using *username* / *password*.


    port (type: int, default: 443)
      The port number to connect to the PAN-OS device on.


    serial_number (type: str)
      The serial number of a firewall to use for targeted commands. If *ip_address* is not a Panorama PAN-OS device, then this param is ignored.



  state (type: str, default: present)
    The state.





Notes
-----

.. note::
   - Checkmode is supported.
   - Panorama is supported.




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Configure login banner
      vars:
        banner_text: 'Authorized Personnel Only!'
      panos_config_element:
        provider: '{{ provider }}'
        xpath: '/config/devices/entry[@name="localhost.localdomain"]/deviceconfig/system'
        element: '<login-banner>{{ banner_text }}</login-banner>'

    - name: Create address object
      panos_config_element:
        provider: '{{ provider }}'
        xpath: "/config/devices/entry[@name='localhost.localdomain']/vsys/entry[@name='vsys1']/address"
        element: |
          <entry name="Test-One">
            <ip-netmask>1.1.1.1</ip-netmask>
          </entry>

    - name: Delete address object 'Test-One'
      panos_config_element:
        provider: '{{ provider }}'
        xpath: "/config/devices/entry[@name='localhost.localdomain']/vsys/entry[@name='vsys1']/address/entry[@name='Test-One']"
        state: 'absent'



Return Values
-------------

changed (always, bool, )
  A boolean value indicating if the task had to make changes.


msg (failure, always, str, )
  A string with an error message, if any.


diff (success, when needed, dict, )
  Information about the differences between the previous and current state.

  Contains 'before' and 'after' keys.





Status
------





Authors
~~~~~~~

- Nathan Embery (@nembery)
- Michael Richardson (@mrichardson03)

